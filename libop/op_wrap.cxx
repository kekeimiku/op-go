/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: .\op.i

#define SWIGMODULE opEx

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;


# if !defined(__clang__) && (defined(__i386__) || defined(__x86_64__))
#   define SWIGSTRUCTPACKED __attribute__((__packed__, __gcc_struct__))
# else
#   define SWIGSTRUCTPACKED __attribute__((__packed__))
# endif



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } SWIGSTRUCTPACKED a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static void Swig_free(void* p) {
  free(p);
}

static void* Swig_malloc(int c) {
  return malloc(c);
}


    #define OP_API
#include "libop.h"


#include <string>

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_opEx_7bb69c4307a7cd11(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


void *_wrap_Swig_malloc_opEx_7bb69c4307a7cd11(intgo _swig_go_0) {
  int arg1 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = (int)_swig_go_0; 
  
  result = (void *)Swig_malloc(arg1);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


libop *_wrap_new_libop_opEx_7bb69c4307a7cd11() {
  libop *result = 0 ;
  libop *_swig_go_result;
  
  
  result = (libop *)new libop();
  *(libop **)&_swig_go_result = (libop *)result; 
  return _swig_go_result;
}


void _wrap_delete_libop_opEx_7bb69c4307a7cd11(libop *_swig_go_0) {
  libop *arg1 = (libop *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  
  delete arg1;
  
}


std::wstring *_wrap_libop_Ver_opEx_7bb69c4307a7cd11(libop *_swig_go_0) {
  libop *arg1 = (libop *) 0 ;
  std::wstring result;
  std::wstring *_swig_go_result;
  
  arg1 = *(libop **)&_swig_go_0; 
  
  result = (arg1)->Ver();
  *(std::wstring **)&_swig_go_result = new std::wstring(result); 
  return _swig_go_result;
}


void _wrap_libop_SetPath_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->SetPath((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_GetPath_opEx_7bb69c4307a7cd11(libop *_swig_go_0, std::wstring *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  std::wstring *arg2 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(std::wstring **)&_swig_go_1; 
  
  (arg1)->GetPath(*arg2);
  
}


void _wrap_libop_GetBasePath_opEx_7bb69c4307a7cd11(libop *_swig_go_0, std::wstring *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  std::wstring *arg2 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(std::wstring **)&_swig_go_1; 
  
  (arg1)->GetBasePath(*arg2);
  
}


void _wrap_libop_GetID_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->GetID(arg2);
  
}


void _wrap_libop_GetLastError_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->GetLastError(arg2);
  
}


void _wrap_libop_SetShowErrorMsg_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->SetShowErrorMsg(arg2,arg3);
  
}


void _wrap_libop_Sleep_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->Sleep(arg2,arg3);
  
}


void _wrap_libop_InjectDll_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->InjectDll((wchar_t const *)arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_EnablePicCache_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->EnablePicCache(arg2,arg3);
  
}


void _wrap_libop_CapturePre_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->CapturePre((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_AStarFindPath_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, wchar_t *_swig_go_3, long long _swig_go_4, long long _swig_go_5, long long _swig_go_6, long long _swig_go_7, std::wstring *_swig_go_8) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long arg5 ;
  long arg6 ;
  long arg7 ;
  long arg8 ;
  std::wstring *arg9 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = (long)_swig_go_5; 
  arg7 = (long)_swig_go_6; 
  arg8 = (long)_swig_go_7; 
  arg9 = *(std::wstring **)&_swig_go_8; 
  
  (arg1)->AStarFindPath(arg2,arg3,(wchar_t const *)arg4,arg5,arg6,arg7,arg8,*arg9);
  
}


void _wrap_libop_FindNearestPos_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, std::wstring *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  std::wstring *arg6 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(std::wstring **)&_swig_go_5; 
  
  (arg1)->FindNearestPos((wchar_t const *)arg2,arg3,arg4,arg5,*arg6);
  
}


void _wrap_libop_EnumWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long _swig_go_4, std::wstring *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long arg5 ;
  std::wstring *arg6 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(std::wstring **)&_swig_go_5; 
  
  (arg1)->EnumWindow(arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5,*arg6);
  
}


void _wrap_libop_EnumWindowByProcess_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long _swig_go_4, std::wstring *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long arg5 ;
  std::wstring *arg6 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(std::wstring **)&_swig_go_5; 
  
  (arg1)->EnumWindowByProcess((wchar_t const *)arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5,*arg6);
  
}


void _wrap_libop_EnumProcess_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->EnumProcess((wchar_t const *)arg2,*arg3);
  
}


void _wrap_libop_ClientToScreen_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->ClientToScreen(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_FindWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->FindWindow((wchar_t const *)arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_FindWindowByProcess_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->FindWindowByProcess((wchar_t const *)arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5);
  
}


void _wrap_libop_FindWindowByProcessId_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->FindWindowByProcessId(arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5);
  
}


void _wrap_libop_FindWindowEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->FindWindowEx(arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5);
  
}


void _wrap_libop_GetClientRect_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3, long long *_swig_go_4, long long *_swig_go_5, long long *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  long *arg6 = (long *) 0 ;
  long *arg7 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  arg6 = *(long **)&_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  
  (arg1)->GetClientRect(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_libop_GetClientSize_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->GetClientSize(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_GetForegroundFocus_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->GetForegroundFocus(arg2);
  
}


void _wrap_libop_GetForegroundWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->GetForegroundWindow(arg2);
  
}


void _wrap_libop_GetMousePointWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->GetMousePointWindow(arg2);
  
}


void _wrap_libop_GetPointWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->GetPointWindow(arg2,arg3,arg4);
  
}


void _wrap_libop_GetProcessInfo_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->GetProcessInfo(arg2,*arg3);
  
}


void _wrap_libop_GetSpecialWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->GetSpecialWindow(arg2,arg3);
  
}


void _wrap_libop_GetWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->GetWindow(arg2,arg3,arg4);
  
}


void _wrap_libop_GetWindowClass_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->GetWindowClass(arg2,*arg3);
  
}


void _wrap_libop_GetWindowProcessId_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->GetWindowProcessId(arg2,arg3);
  
}


void _wrap_libop_GetWindowProcessPath_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->GetWindowProcessPath(arg2,*arg3);
  
}


void _wrap_libop_GetWindowRect_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3, long long *_swig_go_4, long long *_swig_go_5, long long *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  long *arg6 = (long *) 0 ;
  long *arg7 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  arg6 = *(long **)&_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  
  (arg1)->GetWindowRect(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_libop_GetWindowState_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->GetWindowState(arg2,arg3,arg4);
  
}


void _wrap_libop_GetWindowTitle_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->GetWindowTitle(arg2,*arg3);
  
}


void _wrap_libop_MoveWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->MoveWindow(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_ScreenToClient_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2, long long *_swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->ScreenToClient(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_SendPaste_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->SendPaste(arg2,arg3);
  
}


void _wrap_libop_SetClientSize_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->SetClientSize(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_SetWindowState_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SetWindowState(arg2,arg3,arg4);
  
}


void _wrap_libop_SetWindowSize_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->SetWindowSize(arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_SetWindowText_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SetWindowText(arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_SetWindowTransparent_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SetWindowTransparent(arg2,arg3,arg4);
  
}


void _wrap_libop_SendString_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SendString(arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_SendStringIme_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SendStringIme(arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_RunApp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->RunApp((wchar_t const *)arg2,arg3,arg4);
  
}


void _wrap_libop_WinExec_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->WinExec((wchar_t const *)arg2,arg3,arg4);
  
}


void _wrap_libop_GetCmdStr_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long _swig_go_2, std::wstring *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long arg3 ;
  std::wstring *arg4 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(std::wstring **)&_swig_go_3; 
  
  (arg1)->GetCmdStr((wchar_t const *)arg2,arg3,*arg4);
  
}


void _wrap_libop_BindWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, wchar_t *_swig_go_4, long long _swig_go_5, long long *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  wchar_t *arg5 = (wchar_t *) 0 ;
  long arg6 ;
  long *arg7 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = *(wchar_t **)&_swig_go_4; 
  arg6 = (long)_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  
  (arg1)->BindWindow(arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,(wchar_t const *)arg5,arg6,arg7);
  
}


void _wrap_libop_UnBindWindow_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->UnBindWindow(arg2);
  
}


void _wrap_libop_GetCursorPos_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1, long long *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  long *arg3 = (long *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->GetCursorPos(arg2,arg3,arg4);
  
}


void _wrap_libop_MoveR_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->MoveR(arg2,arg3,arg4);
  
}


void _wrap_libop_MoveTo_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->MoveTo(arg2,arg3,arg4);
  
}


void _wrap_libop_MoveToEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, long long *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  long *arg6 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(long **)&_swig_go_5; 
  
  (arg1)->MoveToEx(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_libop_LeftClick_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->LeftClick(arg2);
  
}


void _wrap_libop_LeftDoubleClick_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->LeftDoubleClick(arg2);
  
}


void _wrap_libop_LeftDown_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->LeftDown(arg2);
  
}


void _wrap_libop_LeftUp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->LeftUp(arg2);
  
}


void _wrap_libop_MiddleClick_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->MiddleClick(arg2);
  
}


void _wrap_libop_MiddleDown_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->MiddleDown(arg2);
  
}


void _wrap_libop_MiddleUp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->MiddleUp(arg2);
  
}


void _wrap_libop_RightClick_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->RightClick(arg2);
  
}


void _wrap_libop_RightDown_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->RightDown(arg2);
  
}


void _wrap_libop_RightUp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->RightUp(arg2);
  
}


void _wrap_libop_WheelDown_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->WheelDown(arg2);
  
}


void _wrap_libop_WheelUp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  
  (arg1)->WheelUp(arg2);
  
}


void _wrap_libop_GetKeyState_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->GetKeyState(arg2,arg3);
  
}


void _wrap_libop_KeyDown_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyDown(arg2,arg3);
  
}


void _wrap_libop_KeyDownChar_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyDownChar((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_KeyUp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyUp(arg2,arg3);
  
}


void _wrap_libop_KeyUpChar_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyUpChar((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_WaitKey_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->WaitKey(arg2,arg3,arg4);
  
}


void _wrap_libop_KeyPress_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyPress(arg2,arg3);
  
}


void _wrap_libop_KeyPressChar_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->KeyPressChar((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_Capture_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, long long *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  long *arg7 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  
  (arg1)->Capture(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7);
  
}


void _wrap_libop_CmpColor_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, wchar_t *_swig_go_3, double _swig_go_4, long long *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  double arg5 ;
  long *arg6 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = (double)_swig_go_4; 
  arg6 = *(long **)&_swig_go_5; 
  
  (arg1)->CmpColor(arg2,arg3,(wchar_t const *)arg4,arg5,arg6);
  
}


void _wrap_libop_FindColor_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, long long _swig_go_7, long long *_swig_go_8, long long *_swig_go_9, long long *_swig_go_10) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  long arg8 ;
  long *arg9 = (long *) 0 ;
  long *arg10 = (long *) 0 ;
  long *arg11 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (long)_swig_go_7; 
  arg9 = *(long **)&_swig_go_8; 
  arg10 = *(long **)&_swig_go_9; 
  arg11 = *(long **)&_swig_go_10; 
  
  (arg1)->FindColor(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,arg8,arg9,arg10,arg11);
  
}


void _wrap_libop_FindColorEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, long long _swig_go_7, std::wstring *_swig_go_8) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  long arg8 ;
  std::wstring *arg9 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (long)_swig_go_7; 
  arg9 = *(std::wstring **)&_swig_go_8; 
  
  (arg1)->FindColorEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,arg8,*arg9);
  
}


void _wrap_libop_FindMultiColor_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long _swig_go_8, long long *_swig_go_9, long long *_swig_go_10, long long *_swig_go_11) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long arg9 ;
  long *arg10 = (long *) 0 ;
  long *arg11 = (long *) 0 ;
  long *arg12 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = *(long **)&_swig_go_9; 
  arg11 = *(long **)&_swig_go_10; 
  arg12 = *(long **)&_swig_go_11; 
  
  (arg1)->FindMultiColor(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,arg10,arg11,arg12);
  
}


void _wrap_libop_FindMultiColorEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long _swig_go_8, std::wstring *_swig_go_9) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long arg9 ;
  std::wstring *arg10 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = *(std::wstring **)&_swig_go_9; 
  
  (arg1)->FindMultiColorEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,*arg10);
  
}


void _wrap_libop_FindPic_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long _swig_go_8, long long *_swig_go_9, long long *_swig_go_10, long long *_swig_go_11) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long arg9 ;
  long *arg10 = (long *) 0 ;
  long *arg11 = (long *) 0 ;
  long *arg12 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = *(long **)&_swig_go_9; 
  arg11 = *(long **)&_swig_go_10; 
  arg12 = *(long **)&_swig_go_11; 
  
  (arg1)->FindPic(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,arg10,arg11,arg12);
  
}


void _wrap_libop_FindPicEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long _swig_go_8, std::wstring *_swig_go_9) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long arg9 ;
  std::wstring *arg10 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = *(std::wstring **)&_swig_go_9; 
  
  (arg1)->FindPicEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,*arg10);
  
}


void _wrap_libop_FindPicExS_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long _swig_go_8, std::wstring *_swig_go_9) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long arg9 ;
  std::wstring *arg10 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = *(std::wstring **)&_swig_go_9; 
  
  (arg1)->FindPicExS(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,*arg10);
  
}


void _wrap_libop_FindColorBlock_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, long long _swig_go_7, long long _swig_go_8, long long _swig_go_9, long long *_swig_go_10, long long *_swig_go_11, long long *_swig_go_12) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  long arg8 ;
  long arg9 ;
  long arg10 ;
  long *arg11 = (long *) 0 ;
  long *arg12 = (long *) 0 ;
  long *arg13 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (long)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = (long)_swig_go_9; 
  arg11 = *(long **)&_swig_go_10; 
  arg12 = *(long **)&_swig_go_11; 
  arg13 = *(long **)&_swig_go_12; 
  
  (arg1)->FindColorBlock(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  
}


void _wrap_libop_FindColorBlockEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, long long _swig_go_7, long long _swig_go_8, long long _swig_go_9, std::wstring *_swig_go_10) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  long arg8 ;
  long arg9 ;
  long arg10 ;
  std::wstring *arg11 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = (long)_swig_go_7; 
  arg9 = (long)_swig_go_8; 
  arg10 = (long)_swig_go_9; 
  arg11 = *(std::wstring **)&_swig_go_10; 
  
  (arg1)->FindColorBlockEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,arg8,arg9,arg10,*arg11);
  
}


void _wrap_libop_GetColor_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, std::wstring *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  std::wstring *arg4 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = *(std::wstring **)&_swig_go_3; 
  
  (arg1)->GetColor(arg2,arg3,*arg4);
  
}


void _wrap_libop_SetDisplayInput_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->SetDisplayInput((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_LoadPic_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->LoadPic((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_FreePic_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->FreePic((wchar_t const *)arg2,arg3);
  
}


void _wrap_libop_LoadMemPic_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, void *_swig_go_2, long long _swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = (void *) 0 ;
  long arg4 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->LoadMemPic((wchar_t const *)arg2,arg3,arg4,arg5);
  
}


void _wrap_libop_GetScreenData_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, void **_swig_go_5, long long *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  void **arg6 = (void **) 0 ;
  long *arg7 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(void ***)&_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  
  (arg1)->GetScreenData(arg2,arg3,arg4,arg5,arg6,arg7);
  
}


void _wrap_libop_GetScreenDataBmp_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, void **_swig_go_5, long long *_swig_go_6, long long *_swig_go_7) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  void **arg6 = (void **) 0 ;
  long *arg7 = (long *) 0 ;
  long *arg8 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(void ***)&_swig_go_5; 
  arg7 = *(long **)&_swig_go_6; 
  arg8 = *(long **)&_swig_go_7; 
  
  (arg1)->GetScreenDataBmp(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


void _wrap_libop_GetScreenFrameInfo_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long *_swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long *arg2 = (long *) 0 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(long **)&_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->GetScreenFrameInfo(arg2,arg3);
  
}


void _wrap_libop_MatchPicName_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, std::wstring *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  std::wstring *arg3 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(std::wstring **)&_swig_go_2; 
  
  (arg1)->MatchPicName((wchar_t const *)arg2,*arg3);
  
}


void _wrap_libop_SetDict_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long *arg4 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(long **)&_swig_go_3; 
  
  (arg1)->SetDict(arg2,(wchar_t const *)arg3,arg4);
  
}


void _wrap_libop_SetMemDict_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long _swig_go_3, long long *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long arg4 ;
  long *arg5 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(long **)&_swig_go_4; 
  
  (arg1)->SetMemDict(arg2,(wchar_t const *)arg3,arg4,arg5);
  
}


void _wrap_libop_UseDict_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long *_swig_go_2) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long *arg3 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(long **)&_swig_go_2; 
  
  (arg1)->UseDict(arg2,arg3);
  
}


void _wrap_libop_Ocr_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, std::wstring *_swig_go_7) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  std::wstring *arg8 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = *(std::wstring **)&_swig_go_7; 
  
  (arg1)->Ocr(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,*arg8);
  
}


void _wrap_libop_OcrEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, std::wstring *_swig_go_7) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  std::wstring *arg8 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = *(std::wstring **)&_swig_go_7; 
  
  (arg1)->OcrEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,*arg8);
  
}


void _wrap_libop_FindStr_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, long long *_swig_go_8, long long *_swig_go_9, long long *_swig_go_10) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  long *arg9 = (long *) 0 ;
  long *arg10 = (long *) 0 ;
  long *arg11 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = *(long **)&_swig_go_8; 
  arg10 = *(long **)&_swig_go_9; 
  arg11 = *(long **)&_swig_go_10; 
  
  (arg1)->FindStr(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,arg9,arg10,arg11);
  
}


void _wrap_libop_FindStrEx_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, wchar_t *_swig_go_6, double _swig_go_7, std::wstring *_swig_go_8) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  wchar_t *arg7 = (wchar_t *) 0 ;
  double arg8 ;
  std::wstring *arg9 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = *(wchar_t **)&_swig_go_6; 
  arg8 = (double)_swig_go_7; 
  arg9 = *(std::wstring **)&_swig_go_8; 
  
  (arg1)->FindStrEx(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,(wchar_t const *)arg7,arg8,*arg9);
  
}


void _wrap_libop_OcrAuto_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, double _swig_go_5, std::wstring *_swig_go_6) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  double arg6 ;
  std::wstring *arg7 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = (double)_swig_go_5; 
  arg7 = *(std::wstring **)&_swig_go_6; 
  
  (arg1)->OcrAuto(arg2,arg3,arg4,arg5,arg6,*arg7);
  
}


void _wrap_libop_OcrFromFile_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, wchar_t *_swig_go_2, double _swig_go_3, std::wstring *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  double arg4 ;
  std::wstring *arg5 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = (double)_swig_go_3; 
  arg5 = *(std::wstring **)&_swig_go_4; 
  
  (arg1)->OcrFromFile((wchar_t const *)arg2,(wchar_t const *)arg3,arg4,*arg5);
  
}


void _wrap_libop_OcrAutoFromFile_opEx_7bb69c4307a7cd11(libop *_swig_go_0, wchar_t *_swig_go_1, double _swig_go_2, std::wstring *_swig_go_3) {
  libop *arg1 = (libop *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  double arg3 ;
  std::wstring *arg4 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = *(wchar_t **)&_swig_go_1; 
  arg3 = (double)_swig_go_2; 
  arg4 = *(std::wstring **)&_swig_go_3; 
  
  (arg1)->OcrAutoFromFile((wchar_t const *)arg2,arg3,*arg4);
  
}


void _wrap_libop_FindLine_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, long long _swig_go_2, long long _swig_go_3, long long _swig_go_4, wchar_t *_swig_go_5, double _swig_go_6, std::wstring *_swig_go_7) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  wchar_t *arg6 = (wchar_t *) 0 ;
  double arg7 ;
  std::wstring *arg8 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = (long)_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(wchar_t **)&_swig_go_5; 
  arg7 = (double)_swig_go_6; 
  arg8 = *(std::wstring **)&_swig_go_7; 
  
  (arg1)->FindLine(arg2,arg3,arg4,arg5,(wchar_t const *)arg6,arg7,*arg8);
  
}


void _wrap_libop_WriteData_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, wchar_t *_swig_go_3, long long _swig_go_4, long long *_swig_go_5) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  wchar_t *arg4 = (wchar_t *) 0 ;
  long arg5 ;
  long *arg6 = (long *) 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = *(wchar_t **)&_swig_go_3; 
  arg5 = (long)_swig_go_4; 
  arg6 = *(long **)&_swig_go_5; 
  
  (arg1)->WriteData(arg2,(wchar_t const *)arg3,(wchar_t const *)arg4,arg5,arg6);
  
}


void _wrap_libop_ReadData_opEx_7bb69c4307a7cd11(libop *_swig_go_0, long long _swig_go_1, wchar_t *_swig_go_2, long long _swig_go_3, std::wstring *_swig_go_4) {
  libop *arg1 = (libop *) 0 ;
  long arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  long arg4 ;
  std::wstring *arg5 = 0 ;
  
  arg1 = *(libop **)&_swig_go_0; 
  arg2 = (long)_swig_go_1; 
  arg3 = *(wchar_t **)&_swig_go_2; 
  arg4 = (long)_swig_go_3; 
  arg5 = *(std::wstring **)&_swig_go_4; 
  
  (arg1)->ReadData(arg2,(wchar_t const *)arg3,arg4,*arg5);
  
}


#ifdef __cplusplus
}
#endif

